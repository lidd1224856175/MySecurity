{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red127\green127\blue127;\red251\green0\blue7;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww19400\viewh11220\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs32 \cf0 \ul \ulc0 LDAP Injection
\b0 \ulnone \
\
\pard\pardeftab720\sl280\partightenfactor0

\f1\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LDAP Injection is an attack used to exploit web based applications that construct LDAP statements based on user input. When an application fails to properly sanitize user input, it\'92s possible to modify LDAP statements using a local proxy. This could result in the execution of arbitrary commands such as granting permissions to unauthorized queries, and content modification inside the LDAP tree. The same advanced exploitation techniques available in SQL Injection can be similarly applied in LDAP Injection.\
\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf2 In this section, we will cover LDAP attacks. LDAP is often used as a backend for authentication, especially in Single-Sign-On (SSO) solutions. LDAP has its own syntax that we will see in more detail, in the following examples.\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\b \cf2 Example 1\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0 \cf2 In this first example, you connect to a LDAP server, using your username and password. In this instance, The LDAP server does not authenticate you, since your credentials are invalid.\
However, 
\b some LDAP servers authorise NULL Bind
\b0 : if null values are sent, the LDAP server will proceed to bind the connection, and the PHP code will think that the credentials are correct. To get the 
\f2 bind
\f1  with 2 null values, you will need to completely remove this parameter from the query. If you keep something like 
\f2 username=&password=
\f1  in the URL, these values will not work, since they won\'92t be null; instead, they will be empty.\
\cb3 http://192.168.123.133/ldap/example1.php?username=hacker&password=hacker\
http://192.168.123.133/ldap/example1.php		\'97 You can authenticate using NULL!!\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\b \cf2 \cb1 Example 2\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f2\b0 \cf2 http://[yourlab]/ldap/example2.php?name=hacker)(cn=*))%00&password=asdfasdf
\f1 \
the variable 
\i $filter
\i0  will become to \'93\cf4 \strokec4 (&(cn=hacker)(cn=*))%00)(userPassword=[pass]))\cf2 \strokec2 \'94 which 
\i\b %00
\i0\b0  will get rid of all the following strings.\
}