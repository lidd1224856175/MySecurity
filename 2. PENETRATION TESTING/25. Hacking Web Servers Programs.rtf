{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red54\green51\blue50;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13540\viewh11320\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 \ul \ulc0 dirBuster SOS!!\

\f1\b0\fs32 \cf2 \expnd0\expndtw0\kerning0
\ulnone \
HTTP Brute Force \'97> Finds every path/file/dir of the target IP\
\pard\pardeftab720
\cf2 The first simulation lab in the Hacking Web Server module introduces you to dirBuster.\
\
dirBuster is an excellent tool for doing 
\b \expnd0\expndtw0\kerning0
web application testing to target HTTP directories
\b0 \expnd0\expndtw0\kerning0
.\'a0 It runs on the Kali Linux system.\
In this lab, you\'92ll learn the mechanics behind 
\b \expnd0\expndtw0\kerning0
targeted Brute Force application testin
\b0 \expnd0\expndtw0\kerning0
g, how to define specific guest/header request, and observe a demonstration of why you must include \'93HTTP\'94 in your query setup syntax as part of this penetration testing task.\
You\'92ll also learn target sources for controlled Brute Force testing, and how to locate the specific file or directory path target.\
\

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 Provide a target IP, # of threads, choose Scanning Type\
choose one of a list of  files with the list of dir/files\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
It gives us information of the paths that exist and the HTTP Value (301,403..)\
\
You can also save results in a file\'85\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \ul WPScan
\b0 \ulnone \
\
\pard\pardeftab720

\f1\fs32 \cf2 \expnd0\expndtw0\kerning0
This next lab in the Hacking Web Servers module introduces you to WPScan.\expnd0\expndtw0\kerning0
\
\
\expnd0\expndtw0\kerning0
WPScan stands for 
\b WordPress Scan
\b0 . This lesson demonstrates how to do a vulnerability scan on web server applications to target WordPress sites. This lesson specifically uses WordPress (WP).\expnd0\expndtw0\kerning0
\
\expnd0\expndtw0\kerning0
You\'92ll learn the different target types you can execute such as 
\b password lists, user names, as well as site paths
\b0 .\'a0 This direct application approach is key to helping you identify how tools work, particularly since that might vary from one web server application to another.
\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
- Non intrusive checks\
	ruby ./wpscan.rb \'97url www.example\
\
- Password brute force on users and on admin\
	ruby ./wpscan.rb \'97url www.example \'97wordlist darkc0de.lst \'97threads 58\
\
- Enumerate installed plugins\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	ruby ./wpscan.rb \'97url www.example \'97enumerate p\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
- Enumerate installed themes, timthumbs\
- Enumerate users\
- Use a HTTP Proxy, SOCKS5 proxy\
- Use custom content directory\
- Update the db\
	ruby ./wpscan.rb \'97update OR wpscan \'97 update\
\
ex wpscan \'97url http://linuxwarrior.com >> wpscan.txt 	-> to save to file\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \ul Commands
\b0 \ulnone \
\
\
\
\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
}